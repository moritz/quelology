#!/usr/bin/env perl
use 5.012;
use warnings;

use Mojolicious::Lite;
use Mojolicious::Session;
use Mojo::ByteStream 'b';
use lib 'lib';
use lib '../lib';
use XFacts::Config qw(schema config);
use Carp qw(confess);
use List::MoreUtils qw/uniq/;
use utf8;

my $schema   = schema;
my $static   = Mojolicious::Static->new;

# $SIG{__WARN__} = \&confess;

app->secret( config()->{web_secret} );
app->types->type(html => 'text/html; charset=utf-8');

app->helper(shelf => sub {
    my $self = shift;
    my @items = @{ $self->session->{shelf_ids} // [] };
    return b($self->render(
        items   => [map($schema->m->by_id($_), @items)],
        partial => 1,
        template => 'small-shelf',
    ));
});

get '/' =>  sub {
    my $self = shift;
    my $t = '';
    $self->render(
        threads     => [$schema->m->threads],
        singles     => [$schema->m->singles],
        template    => 'index',
        title       => 'List of series',
    );
} => 'index';

get '/m/:id' => sub {
    my $self = shift;
    my $node = $schema->m->by_id($self->param('id'));
    my $template = $node->is_leaf ? 'medium' : 'tree';
    $self->render(
        layout  => 'basic',
        title   => 'Details',
        node    => $node,
        template => $template,
    );
} => 'medium';

get '/details/:id' => sub {
    my $self = shift;
    my $node = $schema->m->by_id($self->param('id'));
    $self->render(
        layout  => 'basic',
        title   => "Details for " . $node->title . " by " . $node->made_by,
        node    => $node,
        template => 'medium',
    );
} => 'details';

get '/asin/:asin' => sub {
    my $self = shift;
    my $node = eval {
        $schema->m->from_asin($self->stash('asin'));
    };
    if ($node) {
        $self->render(
            template => 'medium',
            title    => 'Details',
            node     => $node,
            layout   => 'basic',
        );
    } else {
        $self->render(status => 404, text => 'Book not found');
    }

} => 'asin';

get '/edit/:id' => sub {
    my $self = shift;
    $self->render(template => 'edit', nodes => [$schema->m
        ->by_id($self->param('id'))->thread_with_drop_points],
        title => 'Edit a tree',
    );
};

get '/t/:id' => sub {
    my $self = shift;
    $self->render(
        layout  => 'basic',
        title   => 'Tree details',
        node    => $schema->m->by_id($self->param('id')),
    );
} => 'tree';

get '/search/:keyword' => sub {
    my $self = shift;
    my $keyword = $self->param('keyword');
    my $res = XFacts::Config::amazon->search(
                    keywords => $keyword,
                    type     => 'Books',
               );
    $self->render(
        layout  => 'basic',
        title   => "Search r,sults for '$keyword'",
        template => 'search',
        results => [$schema->m->websearch($keyword)],
    );

} => 'search';

$SIG{INT} = sub {
    $schema->storage->disconnect;
    exec $^X, $0, @ARGV;
};

sub render_shelf {
    my $self = shift;
    $self->render(template => 'just-shelf');
}

post '/shelf/delete'=> sub {
    my $self = shift;
    $self->session->{shelf_ids} = [];
    render_shelf($self);
};

post '/shelf/add' => sub {
    my $self = shift;
    unshift @{$self->session->{shelf_ids}}, $self->param('id');
    @{$self->session->{shelf_ids}} = uniq @{$self->session->{shelf_ids}};
    render_shelf($self);
} => 'shelf/add';

get '/shelf/small' => sub {
    my $self = shift;
    render_shelf($self);
} => 'shelf';

get '/shelf/connect' => sub {
    my $self = shift;
    my @nodes = map [$schema->m->by_id($_)->thread_with_drop_points], @{ $self->session->{shelf_ids} // [] };
    $self->render(
        template => 'shelf/connect',
        title    => 'Personal Bookshelf',
        nodes    => \@nodes,
    );
};

post '/edit' => sub {
    my $self = shift;
    my ($source_id, $target_id, $where)
            = map $self->param($_), qw/source_id target_id edit_where/;
    my $target = $schema->m->find($target_id);
    die "No target with id $target_id" unless $target;
    my $source = $schema->m->find($source_id);
    die "No source with id $source_id" unless $source;

    if ( $target->is_root && $where ne 'below' ) {
        die "Can't modify root nodes in such a way yet";
    }

    if ( $where eq 'after' ) {
        $target->attach_right_sibling($source);
    } elsif ( $where eq 'before' ) {
        $target->attach_left_sibling($source);
    } elsif ( $where eq 'below' ) {
        $target->attach_leftmost_child($source);
    } else {
        die "Don't know what to do with position '$where' (allowed: before, after, below)";
    }
    $self->render(template => 'edit', nodes => [$target->thread_with_drop_points],
        title => 'Edited tree',
    );

};

app->start;
$schema->storage->disconnect;
1;

__DATA__

@@ index.html.ep
% layout 'basic';
<h1>List of Series</h1>
<ul>
<% for my $n (@$threads) { %>
    <li class="medium" id="medium_<%= $n->id %>">
    <%= link_to $n->title, medium => { id => $n->id } %>
    by <strong><%= $n->made_by %></strong>
    </li>
<% } %>
</ul>
<h1>List of single nodes</h1>
<ul>
<% for my $n (@$singles) { %>
    <li class="medium" id="medium_<%= $n->id %>">
    <%= link_to $n->title, medium => { id => $n->id } %>
    by <strong><%= $n->made_by %></strong>
    </li>
<% } %>
</ul>

@@ add_shelf_link.html.ep
<p class="add_to_shelf"><a href="#" onclick="add_id_to_shelf(<%= $node->id %>)">Add to personal book shelf</a></p>

@@ shelf/connect.html.ep
% layout 'basic';
<h1>Personal Book Shelf - Connect Books and Series</h1>
<%== include 'edit_form' %>
<p>Use drag and drop!</p>
% for my $n (@$nodes) {
    % my $first_node = $n->[1][0];
    <h2><%= $first_node->title %></h2>
    <p>by <strong><%= $first_node->made_by; %></strong></p> 
    <%== include 'drop_tree', nodes => $n %>
% }


@@ tree-inline.html.ep
<div class="medium tree_inline">
    <h2><%= $node->title %></h2>
    %== include 'tree-part', node => $node
</div>

@@ tree.html.ep
% layout 'basic';
<h1 class="medium"><%= $node->title %></h1>
%== include 'tree-part', node => $node

@@ tree-part.html.ep
<p>by <strong><%= $node->made_by; %></strong>, published by <strong><%= $node->publisher; %></strong>.</p> 
%# <p><%= link_to('Edit this series', edit => { id => $node->id }); %></p>
<p><a href="/edit/<%= $node->id %>">Edit this series</a></p>
% if ($node->id != $node->root_id) {
    <p>This is part of a <%= link_to "Bigger series (" . $node->title . ").", tree => { id => $node->root_id }; %></p>
% }
%== include add_shelf_link => (node => $node)

<% if ($node->asin) { %>
    <%= include 'small_medium', n => $node =%>
<% } %>
<ul>
<% my $prev_level = 1;
   for my $n ($node->descendants) {
      my $l = $n->level - $prev_level; 
      $prev_level = $n->level;
      my $ld = '';
      if ($l > 0) {
        $ld = '<ul>' x $l;
      } elsif ($l < 0) {
        $ld = '</ul>' x abs($l);
      }
    %>
        <%== $ld =%>
    <li>
        <%= include 'small_medium', n => $n =%>
    </li>
<% } =%>
<%== '</ul>' x $prev_level =%>

@@ edit_form.html.ep
<form id="edit_form" method="post" action="/edit">
    <input type="hidden" id="source_id" name="source_id">
    <input type="hidden" id="target_id" name="target_id">
    <input type="hidden" id="edit_where" name="edit_where">
</form>

@@ edit.html.ep
% layout 'basic';
<%
    my $first_node = $nodes->[1][0];
%>
<h1><%= $first_node->title %></h1>
<p>by <strong><%= $first_node->made_by; %></strong>, published by <strong><%= $first_node->publisher; %></strong>.</p> 

<%== include 'edit_form' %>
<%== include 'drop_tree', nodes => $nodes %>

@@ drop_tree.html.ep
<ul>
<% 
    my $prev_level = 1;
    for my $n (@$nodes) {
        my $current_level;
        if (UNIVERSAL::isa($n, 'XFacts::Model::DropPoint')) {
            $current_level =  $n->level;
        } else {
            $current_level = $n->[0]->level;
        }
        my $l = $current_level - $prev_level; 
        my $ld = '';
        if ($l > 0) {
            $ld = '<ul>' x $l;
        } elsif ($l < 0) {
            $ld = '</ul>' x abs($l);
        }
    %>
        %== $ld
   <li>
        <% if (UNIVERSAL::isa($n, 'XFacts::Model::DropPoint')) { %>
            <%= include 'drop_point', d => $n =%>
        <% } else { %>
            <%= include 'small_medium', n => $n->[0] =%>
            <% if ($n->[1]) { %>
                <%= include 'drop_point', d => $n->[1] =%>
            <% } %>
        <% } %>
    </li>
%   $prev_level = $current_level;
% }
%== '</ul>' x $prev_level;

@@ medium.html.ep
<div class="node draggable" id="medium_<%= $node->id %>">
<h2><%= $node->title %></h2>
<% if (defined $node->made_by) { %>
    <p>Author: <%= $node->made_by %></p>
<% } %>
<% if ($node->id != $node->root_id) { %>
    <p>This is part of a <%= link_to "series (" . $node->root->title . ").", tree => { id => $node->root_id }; %></p>
<% } %>
%== include add_shelf_link => (node => $node)
<p>
    <% if (defined $node->medium_image) { %>
        <% if (defined $node->large_image) { %>
            <a href="<%= $node->large_image %>">
            <% } %>
                <img src="<%= $node->medium_image %>"
                    alt="Cover of <%= $node->title %>" />
            <% if (defined $node->large_image) { %>
                </a>
            <% } %>
        <% } %>
        <br />
        <a href="<%= $node->amazon_url %>">
            View on amazon US
        </a>
    </p>
</div>

@@ small_medium.html.ep
<span id="medium_<%= $n->id %>" class="medium">
    <% if ($n->small_image) { %>
        <img src="<%= $n->small_image %>" alt="" />
    <% } %>
    <%= link_to($n->title, details => { id => $n->id }) %>
    by <%= $n->made_by %> (id <%= $n->id %>)
</span>

@@ drop_point.html.ep
<img
    src="/image/drop-target.png" width="32" height="32"
    id="drop_<%= $d->where %>_<%= $d->id %>" class="drop droppable"
    alt="Drag a book with your mouse and drop it here to insert it here"
>

@@ just-shelf.html.ep
%== shelf

@@ small-shelf.html.ep
<div id="shelf">
    % if (@$items) {
        <ul>
    %   for my $i (@$items) {
            <li><%= link_to medium => { id => $i->id } => (title => $i->title) => begin %>
                <%= $i->short_title %>
            <% end %></li>
    %   }
        </ul>
    % } else {
        <p id="placeholder">Personal book shelf - drag books here.</p>
    %}
    <a href="/shelf/connect">Connect books on your shelf</a>
    <a href="#" onclick="clear_shelf()" style="clear: left">Clear bookshelf</a>
</div>

@@ search.html.ep
<ul>
    % for (@$results) {
        <li>
            <%= include small_medium  => (n => $_) =%>
        </li>
    % }
</ul>

@@ shelf.html.ep
<div id="shelf">
    <strong>Outdated template</strong>
</div>

@@ layouts/basic.html.ep
<!doctype html><html>
    <head>
        <title><%= $title %></title>
        <style type="text/css"><!--
            body {
                padding: 0px;
                margin: 0px;
                height: 100%;
            }
            .shelf-droppable {
                background-color: #FFFF66;
            }
            #header {
                padding: 0.5em;
                margin: 0px;
                min-height: 2em;
            }
            #left-column {
                position: absolute;
                width: 2em;
                height: 100%;
            }
            #content {
                margin: 1em;
                margin-left: 3em;
            }
            .node {
                border: 1px dotted black;
                padding: 0.3em;
                max-width: 20em;
                margin: none;
            }
            #shelf {
                padding: 0.1em;
            }
            #shelf li {
                float: left; 
                list-style-type: none;
                padding: 1ex;
            }
  // --></style>
    <link rel="shortcut icon" href="/favicon.ico">
    <script type="text/javascript" src="/js/jquery-1.4.3.min.js"></script>
    <script type="text/javascript" src="/js/jquery-ui-1.8.6.custom.min.js"></script>
    <script type="text/javascript" src="/js/custom.js"></script>
    </head>
    <body>
        <div id="header" class="shelf-droppable droppable">
            <p style="display: inline;"><%= link_to Home => 'index' %> </p>
            <%== shelf %>
        </div>
        <div id="left-column" class="shelf-droppable droppable">
        </div>
        <div id="content">
            <%== content %>
        </div>
    <div id="debug">
    </div>
    </body>
</html>
