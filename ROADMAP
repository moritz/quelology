The following features are planned for Quelology:


1) Initial feature phase:
DONE:
    * signup
    * web unit tests
    * authorization
    * explaining texts
    * authentication
    * edit titles etc.
    * imprint
    * search in the database
        (cheated version, just uses amazon and then looks
         up threads by ASIN)
    * simple model unit tests


(go live in read-only mode)

1.5) Big Redesign phase:
    * consistent design
    * easier tree editing

2) Editing capabilities
    * enter and edit title, publication and author data
    * search amazon, imoprt raw_publications
      (implemented in the backend, no user interface for it)
    * promote raw_publications to title + publication
    * create translations
    * move publications (and maybe raw publications) around
      inside a series
    * improved series creation (how?)

2.5) Explaning texts about tree editing

(go live for real)

3) More Feature phase:
    * CSRF protection
    * cross-browser testing
    * experiment with kinosearch thingy
    * use, created and view aliases / alternative titles
    * timeline view
    * i18n, l10n => translate page to German and maybe other languages
    * on-site SEO (titles, URLs)
    * other data source /link destination than amazon
    * non-book media
    * log changes to make them reversible
    * more advanced edit:
        - guard against multiple edit fields at once
            (which would mean that a user input might be lost)
    * mass edit form

4) Even More Features phase (speculative at best):
    * "social" features (?)
    * badges/achievement for editing (?)
    * voting on correctness, content; maybe user karma (?)
    * additional meta-information (characters that appear in books) (?)
    * OpenID integration

Explorative ideas not tied to any particular plan:
    * Automatically group translations of series into the same series
      structure as the original language
    * mark the original language in translations
    * more advanced language guessing, based on character sets used,
      or even baed on training data and statistical model (for example
      using Text::Ngram::LanguageDetermine), or experiment with
      Text::Language::Guess (though stopword analysis seems not too
      promising for titles)

DONE
    * translations
    * proper fulltext index + search
    * author pages
